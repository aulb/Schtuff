- what makes me happy
- last few years proud of
- recent project
- whats the most difficult part


1. input: string  - "89789"
2. integer: output integer - 89789

# Ascii:
def ascii_to_integer(ascii_string):
    if len(ascii_string) > 0): 
        is_negative = ascii_string[0] == '-'
    result = 0
    offset = chr('0') 
    for char in ascii_string: 
        result = result * 10 + (chr(char) - offset)
    return result * (-1 if is_negative else 1)
    
'-123' = 123
'0123' = 123
'453'

def integer_to_ascii(integer):
    pass # IDK HOW TO DO IT



    
import sys

MIN_VALUE = sys.maxsize * -1
chicken_tendies = [6, 9, 20]
def can_I_get_exact_chicken_tendies(n):
    cost = [MIN_VALUE] * n
    used = [-1] * n
    
    for i in range(n):
    
    
    3
    chickenT(int n)
        
        if(n<0)
        return false
        
        if(n%6 ==0 ||)
        return true
        
        return chickenT(n-6)|| chickenn(n-9) ||....
    


class Node:
    def __init__(self, data):
        self.data = data
        self.left = None
        self.right = None

def find(p, q):
    # Finding a in b and return a if found else None
    return
                                           
def is_subtree(a, b):
    found_node = find(a, b)
    pass
    
def is_same():
    pass
